FROM node:18-alpine AS client-builder

# Build React client
WORKDIR /client
COPY client/package*.json ./
RUN npm ci
COPY client/ ./
RUN npm run build

FROM node:18-alpine

# Install dumb-init and required libs (OpenSSL + glibc compat) for Prisma
RUN apk add --no-cache dumb-init openssl libc6-compat

# Create app directory
WORKDIR /app

# Create app user
RUN addgroup -g 1001 -S nodejs && adduser -S nodejs -u 1001

# Use a consistent database path for SQLite inside the container (override in CapRover if needed)
ENV DATABASE_URL=file:/app/data/prod.db

# Copy server package files
COPY server/package*.json ./
RUN npm ci --only=production

# Copy server source
COPY server/ ./

# Copy built client into server public dir used by Express (../public from src)
COPY --from=client-builder /client/dist ./public

# Create data directory with proper permissions
RUN mkdir -p /app/data && chown -R nodejs:nodejs /app/data && chown -R nodejs:nodejs /app

# Run as root to ensure write permissions on CapRover-mounted volumes (SQLite file)
# USER nodejs

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD node -e "require('http').get('http://localhost:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => process.exit(1))"

EXPOSE 3001

ENTRYPOINT ["dumb-init", "--"]
CMD ["sh", "start.sh"]